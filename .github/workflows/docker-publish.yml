name: publish

on:
  # Trigger on push event to the production branch
  push:
    branches: [ "production" ]
    # Additional condition to filter by pusher (owner)
    if: github.actor == github.repository_owner

  # Trigger on pull_request merge event to the production branch
  pull_request:
    types: [ "merged" ]
    branches: [ "production" ]
    # No extra condition needed as "merged" implies the owner can only merge their own PR

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.actor }}/lifeguardian-backend:latest

jobs:
    publish:
        name: publish image
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3
        - name: Login
          run: |
            echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        - name: Build and Publish
          run: |
            docker build . --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    deploy:
        needs: publish
        name: deploy image
        runs-on: ubuntu-latest

        steps:
        - name: install ssh keys
          # check this thread to understand why its needed:
          # <https://stackoverflow.com/a/70447517>
          run: |
            install -m 600 -D /dev/null ~/.ssh/id_rsa
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
        - name: connect and pull
          run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker-compose pull && docker-compose up -d && exit"
        - name: cleanup
          run: rm -rf ~/.ssh